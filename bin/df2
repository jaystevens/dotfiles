#!/usr/bin/env python

import subprocess

dfcmd = subprocess.Popen('/bin/df -Ph', stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
intxt = dfcmd.communicate()[0]
intxt = intxt.decode('UTF-8')
intxt = intxt.split('\n')
outtxt = ''
outdict = {}

for line in intxt:
    a = line.split()
    if len(a) > 0:
        if not (a[0] == 'tmpfs') and not (a[0] == 'devtmpfs') and not (a[0] == 'shm') and not (a[0] == 'udev') and not (a[1] == 'auto_home') and not (a[1] == '-hosts') and not (a[1] == '-static') and not (a[0].startswith('cgroup')) and not(a[0] == 'devfs') and not (a[0] == 'none'):
            # ubuntu - /dev/loopX /snap/<item> (squashfs)
            if a[0].startswith('/dev/loop'):
                if a[len(a) - 1].strip().lower().startswith('/snap'):
                    continue
            if a[0].startswith('efivarfs'):
                continue

            # process entry
            a.remove(a[0])
            alast = (len(a) - 1)
            outtxt = ''
            for i in a:
                outtxt += '%s' % i
                if i == a[alast]:
                    outtxt += '\n'
                else:
                    outtxt += '\t'
            tmp = a[alast]
            outdict[tmp] = outtxt

outtxt = ''
# put 'Mounted on' line at top
try:
    outtxt += outdict['on']
    del outdict['on']
except Exception as e:
    pass

# attempt to delete stupid values
deleteme = [ 'shit' ]
for i in deleteme:
    try:
        del outdict[i]
    except Exception as e:
        pass

for key in sorted(list(outdict.keys())):
    outtxt += '%s' % outdict[key]
outtxt = outtxt.rstrip('\n')
print(outtxt)
    
